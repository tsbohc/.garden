#!/bin/bash

# {{{
#declare -A freq
#
#str="$(<~/.garden/usr/notes/1638134555.md)"
#str="$(echo "$str" | tr "\n" " " | tr -d '[:punct:]')"
#
#IFS=" " read -r -a test <<< "$str"
#
#for i in "${test[@]}"; do
#  if [ -z "${freq["$i"]}" ]; then
#    freq["$i"]=1
#  fi
#  #freq["$i"]+=1
#  a="${freq["$i"]}"
#  freq[$i]=$((a + 1))
#done
#
#for i in "${!freq[@]}"
#do
#  echo "$i :: ${freq[$i]}"
#done

#sed -e  's/[^A-Za-z]/ /g' ~/.garden/usr/notes/1638134555.md \
#  | tr 'A-Z' 'a-z' \
#  | tr ' ' '\n' \
#  | grep -v '^$' \
#  | sort \
#  | uniq -c
# }}}

# .tfidf/<word> -> contains a list of <file>:<n-of-occurrences> that contain <word>

#                  n                 df
# idf_i = log( total-text / texts-containing-term_i )

# tf_ij = (n of occurences in text j)

# tfidf of <term-i> in <text-j>
# w_ij = tf_ij * idf_i

notes_dir=~/.garden/usr/test

matrix() { # <text-j>:<term-i>:tf_ij
  grep -o -E '[A-Za-z]+' "$notes_dir/"* \
    | tr 'A-Z' 'a-z' \
    | sort -t: -k2,2 -k1,1 \
    | uniq -c \
    | awk '{ print $2":"$1 }' # not really needed rn but nice to work with
}

tf="$(matrix)"

idf() { # <term-i>:idf_i
  local n; n="$(find "$notes_dir" -type f | wc -l)"
  awk -F ":" -v n="$n" '
  {
    count[$2]++
  } END {
    for (word in count) print word":"log(n/count[word])/2.303
  }' <<< "$tf"
}

tfidf() { # <text-j>:<term-i>:tfidf_ij
  awk -F ":" '
  NR == FNR {
    idf[$1]=$2
  } {
    tfidf=$3*idf[$2]
    if (tfidf != 0) print $1":"$2":"tfidf
  }' <(idf) <(echo "$tf") | sort -t: -r -k1,1 -k3,3
}

tags() {
  awk -F ":" '
  {
    if (length($2) > 2 && length(tags[$1]) < 150) tags[$1]=tags[$1]" "$2
  } END {
    for (text in tags) print text tags[text]
  }' <(tfidf)
}

tags | fzf --preview 'cat {1}' --preview-window=up --no-info







#echo "$m"

# replace uniq -c with awk and do other stuff i need to do? need another pass though...

# this gives me <text-j>:<term-i>:tf_ij

# loop over each <term-i> counting occurences -> df_i


#grep -o -E '[A-Za-z]+' "$notes_dir/"* \
#  | tr 'A-Z' 'a-z' \
#  | sort -t: -k2,2 -k1,1 \
#  | uniq


#rg -o '[A-Za-z]+' "$notes_dir" --no-heading --no-line-number # grep actually wins... needs better testing
