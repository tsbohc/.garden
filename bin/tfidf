#!/bin/bash

#: get tf-idf scores of terms in texts in a directory as '<text-j> <term-i> <tfidf(ij)>'

# n          : total number of texts
# tf(ij)     : occurences of <term-i> in <text-j>
# df(i)      : texts containing <term-i>
# idf(i)     = log10(n/df_i)
# tfidf(ij)  = tf(ij) * idf(i)

if [[ $(echo "$*" | wc -l) -gt 1 ]]; then
  readarray -t input <<< "$@" # accept a list of filepaths delimited by \n, e.g find
# elif [[ -d $* ]]; then
#   readarray -d '' input < <(find "$*" -type f -print0) # accept directory as the only argument
else
  input=("$@") # accept a list of filepaths delimited by spaces, e.g glob
fi

tf() { # <tf(ij)> <text-j> <term-i>
  grep -o -E '[A-Za-z]+' "${input[@]}" \
    | tr 'A-Z' 'a-z' \
    | sort -t ':' -k2,2 -k1,1 \
    | tr ':' ' ' \
    | uniq -c
}

tf="$(tf)"

idf() { # <term-i> <idf-i>
  awk -v n="${#input[@]}" '
  {
    df[$3]++
  } END {
    for (term_i in df) print term_i, log(n/df[term_i])/2.303
  }' <<< "$tf"
}

tfidf() { # <text-j> <term-i> <tfidf(ij)>
  awk '
  NR == FNR {
    idf[$1]=$2
  } {
    tfidf=$1*idf[$3]
    if (tfidf != 0) print $2, $3, tfidf
  }' <(idf) <(echo "$tf") | sort -t ' ' -r -k1,1 -k3,3
}

tfidf="$(tfidf)"

# preserve order in which the files came in
for p in "${input[@]}"; do
  grep "$p " <<< "$tfidf"
done
