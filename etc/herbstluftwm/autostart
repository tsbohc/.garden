#!/usr/bin/env bash

# TODO
# alt+directional binds to split frames would be nice

# clean slate
hc() { herbstclient "$@" ; }

hc emit_hook reload
hc keyunbind --all
hc unrule -F

# put this into a var and just keybind $remove, bam
# chain . remove . emit_hook frame_remove

# autostart dots
command -v hori-hori &>/dev/null && hori-hori hook autostart --installed

#feh --bg-fill ~/Downloads/roujin-z-1.jpg
# TODO add feh to hori-hori
feh --bg-fill ~/whiteflower.jpeg

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
#Mod=Mod1    # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier

hc keybind Mod1-Shift-s spawn scrot-clipboard -q 100 -s

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
#hc keybind $Mod-w close
hc keybind $Mod-Return spawn "${TERMINAL:-xterm}" # use your $TERMINAL with xterm as fallback

# TODO this is the coolest shit ever
hc keybind $Mod-Shift-Return split explode
hc keybind $Mod-r remove # close frame

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u split bottom 0.5
hc keybind $Mod-o split right  0.5
# let the current frame explode into subframes

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Mod1-h       resize left  +$resizestep
hc keybind $Mod-Mod1-n       resize down  +$resizestep
hc keybind $Mod-Mod1-e       resize up    +$resizestep
hc keybind $Mod-Mod1-i       resize right +$resizestep
hc keybind $Mod-Mod1-Left    resize left  +$resizestep
hc keybind $Mod-Mod1-Down    resize down  +$resizestep
hc keybind $Mod-Mod1-Up      resize up    +$resizestep
hc keybind $Mod-Mod1-Right   resize right +$resizestep

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-h     focus left
hc keybind $Mod-n     focus down
hc keybind $Mod-e     focus up
hc keybind $Mod-i     focus right
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-n     shift down
hc keybind $Mod-Shift-e     shift up
hc keybind $Mod-Shift-i     shift right

hc keybind $Mod-space spawn layout-switch

hc keybind Mod1-Shift-n spawn redshift-control 0 -1
hc keybind Mod1-Shift-e spawn redshift-control 0  1

hc keybind Mod1-n spawn redshift-control -250
hc keybind Mod1-e spawn redshift-control  250

hc keybind Mod1-h spawn volume-control -8
hc keybind Mod1-i spawn volume-control  8


# tags
tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
#hc keybind $Mod-period use_index +1 --skip-visible
#hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-t floating toggle
hc keybind $Mod-m fullscreen toggle
#hc keybind $Mod-f set_attr clients.focus.floating toggle
#hc keybind $Mod-Shift-m set_attr clients.focus.minimized true
#hc keybind $Mod-Control-m jumpto last-minimized
hc keybind $Mod-p pseudotile toggle

# TODO i need focus on the new frame
# a rule maybe?

# TODO I *need* this in fennel
# (or (and
#       (compare tags.focus.curframe_wcount gt 0)
#       (close))
#     (remove))

#close_hook() {
#  local winid="$(herbstclient attr clients.focus.winid)"
#  herbstclient emit_hook node_remove "$winid"
#}

close_window_or_frame=(
or . and - compare tags.focus.curframe_wcount gt 0
         - close
   . remove)

hc keybind $Mod-w chain : "${close_window_or_frame[@]}" : spawn node_remove

# maybe there is a way? doesn't it need to be subshelled through
#testing() {
#  hc emit_hook wooooo
#}
#export -f testing
#hc keybind $Mod-q spawn testing

cycle_layouts=(
and
  . compare tags.focus.curframe_wcount gt 1
  . cycle_layout +1 vertical horizontal)

hc keybind $Mod-Shift-space "${cycle_layouts[@]}"


# fmenu
#hc keybind $Mod-Tab spawn fmenu

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
#hc keybind $Mod-BackSpace   cycle_monitor
#hc keybind $Mod-Tab         cycle_all +1
#hc keybind $Mod-Shift-Tab   cycle_all -1
#hc keybind $Mod-c cycle
#hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
#hc set frame_border_active_color '#222222cc'
#hc set frame_border_normal_color '#101010cc'

# TODO some of those are deprecated
hc set frame_bg_normal_color '#03030300'
hc set frame_normal_opacity 20

hc set frame_bg_active_color '#07070700'
hc set frame_active_opacity 70

hc set frame_border_normal_color '#000000'
hc set frame_border_active_color '#000000'

hc set frame_border_inner_color '#ffffff'

hc set frame_border_width 2
hc set frame_border_inner_width 1

hc set always_show_frame true
hc set frame_bg_transparent false # recommended off
#hc set frame_transparent_width 2 # depends on the above being true
hc set frame_gap 5

hc attr theme.floating.border_width 9
hc attr theme.floating.outer_width 8
hc attr theme.floating.inner_width 1

#hc attr theme.background_color '#ffffff'
#hc attr theme.inner_color '#ffffff'
#hc attr theme.outer_color '#ffffff'
#hc attr theme.title_color '#ffffff'

#hc attr theme.floating.background_color '#ff0000'
hc attr theme.floating.inner_color '#323235'
hc attr theme.floating.outer_color '#232326'

hc attr theme.floating.active.inner_color '#636369'
#hc attr theme.floating.active.outer_color '#232326'

#hc attr theme.floating.title_color '#ff0000'

#hc attr theme.title_height 15
#hc attr theme.title_font 'Dejavu Sans:pixelsize=12'  # example using Xft
## hc attr theme.title_font '-*-fixed-medium-r-*-*-13-*-*-*-*-*-*-*'
#hc attr theme.padding_top 2  # space below the title's baseline (i.e. text depth)
#hc attr theme.active.color '#345F0Cef'
#hc attr theme.title_color '#ffffff'
#hc attr theme.normal.color '#323232dd'
#hc attr theme.urgent.color '#7811A1dd'
#hc attr theme.normal.title_color '#898989'
#hc attr theme.inner_width 1
#hc attr theme.inner_color black
#hc attr theme.border_width 1
#hc attr theme.floating.border_width 4
#hc attr theme.floating.outer_width 1
#hc attr theme.floating.outer_color black
#hc attr theme.active.inner_color '#789161'
#hc attr theme.urgent.inner_color '#9A65B0'
#hc attr theme.normal.inner_color '#606060'
## copy inner color to outer_color
#for state in active urgent normal ; do
#    hc substitute C theme.${state}.inner_color \
#        attr theme.${state}.outer_color C
#done
#hc attr theme.active.outer_width 1
#hc attr theme.background_color '#141414'

hc set window_gap 5
hc set frame_padding -5
hc set smart_window_surroundings off
hc set smart_frame_surroundings off
#hc set mouse_recenter_gap 0
hc set focus_follows_mouse false

# rules

hc rule hook=node_add focus=on
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
hc rule floatplacement=smart
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule title='fzfmenu' floating=on floatplacement=center focus=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
hc set_monitors 1920x1080+0+0 1920x1080+1920+0
# or simply:
# hc detect_monitors

# find the panel
#panel=~/.config/herbstluftwm/panel.sh
#[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
#for monitor in $(hc list_monitors | cut -d: -f1) ; do
#    # start it on each monitor
#    "$panel" "$monitor" &
#done
