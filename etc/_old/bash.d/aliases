#!/bin/bash

#    ____     _
#   (. / |   //
#     /--|  // o __.  _   _  _
#  ) /   |_</_<_(_/|_/_)_</_/_)_
# (_/

# blueberry
alias soap='bash ~/blueberry/soap'

# nvim
alias v='nvim'
m() { man "$1" | nvim -u ~/src/pager.vim ; }

rv() { LC_ALL=ru_RU.UTF-8 exec setsid -f st -e bash -c "nvim $@" ; }

alias ruterm='LC_ALL=ru_RU.UTF-8 st'

alias nnn='nnn -H' # show hidden files by default

# braindamage
alias :q='exit'
alias please='sudo'

# nas
alias sshnas="ssh root@192.168.0.40"
alias cdnas="cd $XDG_RUNTIME_DIR/gvfs/smb-share:server=trashcan,share=media"

# ls
alias ls='ls -F --color=auto'
alias la='ls -A'
alias ll='ls -lA'
alias l.='ls -A | egrep "^\."'
alias l='ls'

# cd
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'

# cdls
cdl(){
  cd ${1} ; la
}

# fix typos
alias cd..='cd ..'
alias pdw='pwd'

# colorize grep
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

# confirm before horrible things happen
alias rm='rm -I'
alias cp='cp -i'
alias mv='mv -i'

# readable output
alias df='df -h'

# cleanup orphaned packages
alias pacmancleanup='sudo pacman -Rns $(pacman -Qtdq)'

# xflux/redshift
alias flux='redshift -l 60:30 -t 6000:3800'

calc() { echo $(awk "BEGIN{print $*}"); }
round() { echo $(echo $1 | awk '{ printf("%d", $1 + 0.5) }'); }

fzfpac() {
  local out=$(pacman -Slq | fzf --bind=change:top --layout=reverse --preview 'pacman -Si {}')
  [[ "$out" != "" ]] && sudo pacman -S "$out"
}

ytdl() {
  youtube-dl -f 137+140 $@
  (( $? != 0 )) && youtube-dl -f 136+140 $@
}

# ex - the unarchiver
ex() {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1   ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# dos to unix line endings converter
dostounixlineendings() {
  sed -i -e 's/^M$//' $1
}
