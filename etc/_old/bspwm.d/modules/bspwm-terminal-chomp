#!/bin/bash

# TODO
# if the child window was moved, the parent will still repear in its original location
# fix: subscribe to node movement and track the last position?

# unless one of the terminal's wm_classes is specified, the terminal won't be chomped!
terminals=",st,xterm,"

declare -A windows

chomp() {
  # $1 - wid to chomp
  bspc node "$1" --flag hidden=on
  bspc node "$1" --flag private=on
}

blergh() {
  # $1 - wid to blergh
  #bspc query -N -n "$1".fullscreen && bspc desktop -l tiled
  bspc node "$1" --flag hidden=off
  bspc node "$1" --flag private=off
  bspc node "$1" --focus
}

get_pid() {
  # $1 - wid
  xprop -id "$1" _NET_WM_PID | awk '{ print $3 }'
}

is_child() {
  # $1 - child_pid, $2 - parent_pid
  children="$(pstree -T -p "$2")"
  grep -q "$1" <<< "$children" && echo "y"
}

is_terminal() {
  # $1 - wid
  classes="$(xprop -id "$1" WM_CLASS | awk -F"=" '{ print $2 }' | tr -d '"')"

  IFS=', ' read -r -a classes_array <<< "$classes"
  for class in "${classes_array[@]}"; do
    if grep -q ",$class," <<< "$terminals"; then
      return 0
    fi
  done
  echo "no"
}

bspc subscribe node_add node_remove | while read -r event; do
  event_name="$(awk '{ print $1 }' <<< "$event")"
  if [[ "$event_name" == "node_add" ]]; then

    # get ids for both windows
    n_wid="$(awk '{ print $5 }' <<< "$event")"
    l_wid="$(bspc query -N -d -n last.window)"

    n_pid="$(get_pid "$n_wid")"
    l_pid="$(get_pid "$l_wid")"

    # check if it's a terminal emulator we're chomping
    if [[ "$(is_terminal "$l_wid")" != "no" ]]; then

      # check if new window is a child process of the previous one
      if [[ "$(is_child "$n_pid" "$l_pid")" == "y" ]]; then
        chomp "$l_wid" "$n_wid"
        windows["$n_wid"]="$l_wid"
      fi
    fi

  elif [[ "$event_name" == "node_remove" ]]; then
    wid="$(awk '{ print $4 }' <<< "$event")"
    did="$(awk '{ print $3 }' <<< "$event")"
    if [ -v "windows[$wid]" ]; then
      bspc node "${windows[$wid]}" --to-desktop "$did"
      blergh "${windows[$wid]}"
      unset windows["$wid"]
    fi
  fi
done
