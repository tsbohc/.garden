#!/bin/bash

TABLE=""
def() { TABLE="$1" ; }
_() { eval "_${TABLE}_${1}=${2}" ; }

def data
  _ key "mykey"
def data_mykey
  _ val "bar"

# -- setup ==

REPO="$HOME/.garden/etc"
RAKE="$HOME/.config/rake"
PACK=""

# -- utils --

once() { # run function 2 in leaf 1 once if defined
  PACK="$1"
  . "$REPO/$PACK/leaf.sh"
  if declare -F "$2" > /dev/null; then
    "$2" ; unset "$2"
  fi
}

readme() { # generate a readme based on currently raked leaves
  local txt="### Leaves currently being raked"$'\n'"\`\`\`"$'\n'
  for p in $RAKE/* ; do txt+="${p/$RAKE\//}"$'\n' ; done
  txt+="\`\`\`"$'\n'
  txt+="See [rake](https://github.com/tsbohc/.garden/tree/master/etc/rake) for more info."$'\n\n'
  txt+="> This readme is generated automatically and is always up to date."
  echo "$txt" > "$REPO/readme.md"
}

# -- template engine --

template() { # render a string based on global context
  local input="$1"
  local expr_re='\{%[[:space:]]([^ ]+)[[:space:]]%\}'
  local leaf_re='\{([^\{\}]+)\}'
  while [[ $input =~ $expr_re ]]; do
    EXPR="${BASH_REMATCH[0]}"
    BODY="${BASH_REMATCH[1]}"
    while [[ $BODY =~ $leaf_re ]]; do
      KEY="_data_${BASH_REMATCH[1]}"
      BODY="${BODY/${BASH_REMATCH[0]}/${!KEY}}"
    done
    input="${input/$EXPR/$BODY}"
  done
  echo "$input"
}

# =- leaf hooks --

render() {
  local source="$REPO/$PACK/$1"
  local target="$RAKE/$PACK/$1"
  mkdir -p "$(dirname "$target")"
  template "$(<"$source")" > "$target"
  echo "$target"
}

link() {
  [[ "$1" == *"$RAKE"* ]] && local source="$1" || local source="$REPO/$PACK/$source"
  local target="${2/\~/$HOME}"
  ln -sfn "$source" "$target"
}

unlink() {
  local target="${1/\~/$HOME}"
  [[ -L "$target" ]] && rm "$target"
}

# -- rake main --

rake() {
  if [[ -d "$REPO/$1" ]]; then
    once "$1" rake
    mkdir -p "$RAKE/$1"
  fi
}

unrake() {
  if [[ -d "$RAKE/$1" ]]; then
    once "$1" unrake
    rm -r "$RAKE/$1"
  fi
}

subcmd="$1" ; shift
case "$subcmd" in
  s|-s|setup)  for p in "$@"; do rake   "$p"; done ; readme ;;
  r|-r|remove) for p in "$@"; do unrake "$p"; done ; readme ;;
  *) echo "rake - tiny .garden management and templating tool"
     echo "       <setup> or <remove> package..." ;;
esac
