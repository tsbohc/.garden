#!/bin/bash

# TODO
# !!!! mpc idle event to refresh cover?
# mpc clear -q

# maybe get the dirname from here
# mpc playlist -f "%file%" | uniq

source "$(ueberzug library)"

set -a

readonly BASH_BINARY="$(which bash)"
readonly Cover_ID='preview'
readonly Cover_FIFO="/tmp/fzf-$$-ueberzug"

library_path="$HOME/microwave/music"
d=""

# {{{
  declare -a fopt=(
    --ansi
    --no-info
    --no-multi
    --no-sort
    --reverse
    --delimiter="$d"
    #--height=60%
    --bind=change:top
    #--preview="echo {}"
    --preview-window='left:20:noborder:wrap'
    --color="preview-fg:-1"
    --margin=1,1
    #--no-clear
    #--bind "pgup:refresh-preview"
    #--bind "ctrl-p:execute-silent^mpc toggle^+refresh-preview"
    #--bind "ctrl-n:execute-silent^mpc next^+refresh-preview"
    #--bind "ctrl-e:execute-silent^mpc prev^+refresh-preview"
    #--bind "esc:execute^$(basename $0) && exit^"
    #--bind "ctrl-c:execute^exit^"
  )
# }}}

# {{{
# ueberzug
start_ueberzug() {
  mkfifo "$Cover_FIFO"
  ImageLayer --silent <"$Cover_FIFO" &
  exec 3>"$Cover_FIFO" # prevent EOF
}

stop_ueberzug() {
  exec 3>&-
  rm "$Cover_FIFO" &>/dev/null
}

display_cover() {
  cover_path="$library_path/$@/cover.jpg"
  if [[ ! -f "$cover_path" ]]; then
    echo "$cover_path"
    hide_cover
    return
  fi

  >"${Cover_FIFO}" declare -A -p cmd=( \
  [action]=add [identifier]="$Cover_ID" [x]="3" [y]="2" \
  [max_width]="$FZF_PREVIEW_COLUMNS" \
               [path]="$cover_path")
}

hide_cover() {
  >"${Cover_FIFO}" declare -A -p cmd=( \
  [action]=remove [identifier]="$Cover_ID")
}
# }}}

list_albums() {
  #while IFS='/' read -r artist album; do
  #  echo "$album - $artist$d$artist/$album"
  #done <<< "$(find "$library_path" -mindepth 2 -maxdepth 2 -type d -printf '%P\n')"

  while IFS="$d" read -r display path; do
    # TODO switch to sting sub
    echo "$display$d$(dirname "$path")"
  done <<< "$(mpc playlist -f "%album% - [%albumartist%|%artist]$d%file%")"
}

pick_album() {
  list_albums | uniq | \
      SHELL="${BASH_BINARY}" \
        fzf "${fopt[@]}" --no-clear --with-nth 1 --preview "display_cover {2}"
}

list_album_tracks() {
  # $1 - path to album, relative to library
  album_path="$1"
  while IFS="$d" read -r track title position file; do
    # TODO switch to sting sub
    if [[ "$(dirname "$file")" == "$album_path" ]]; then
      echo "$(printf "%02d" $track) $title$d$position"
    fi
  done <<< "$(mpc playlist -f "%track%$d%title%$d%position%$d%file%")"
}

pick_album_track() {
  path="$(awk -F"$d" '{ print $2 }' <<< "$1")"

  list_album_tracks "$path" | \
    SHELL="${BASH_BINARY}" \
      fzf "${fopt[@]}" --with-nth 1 --bind "enter:execute-silent^mpc play {2}^" --bind "esc:execute^list_albums^" --preview "echo -n"
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  #mpc clear
  #mpc ls | mpc add
  ! mpc &>/dev/null && mpd
  [[ "$(mpc playlist | wc -l)" == "0" ]] && mpc ls | mpc add

  trap "stop_ueberzug" EXIT
  start_ueberzug

  export -f display_cover pick_album pick_album_track
  pick_album_track "$(pick_album)"
fi
