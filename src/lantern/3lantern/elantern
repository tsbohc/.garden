#!/bin/bash

# d: blazing fast fzf-powered ~/ browser

# pass a function to prune instead of -print?
# or
# preformat input with awk?

# TODO
# boost score by 10 on use, reduce random 10 entries by 10 (9?)
# exclude list (-not -path '*microwave*')
# if a folder is used, bump the scores of all files inside? could do this with find
# tab menu (again) remove, execute
# reveal !!! 
# copy/move??

# maybe tab puts you in a the highlighted directory?

# wish we could tree view this

# {{{
# a 40
# b 23
# c 12

# a
# c
# d
# e
# f

# loop through old (only store scores > 0)
# check if path exists in new, if not remove, if yes, remove path from new

# sort old
# append new
# }}}

data_path="$HOME/.config/lantern_data"

::lantern::find() {
  find "$HOME" \( \
    -name '.*' \
    -o -name 'microwave' \
    -o -name 'godot' \
    -o -name 'tsbohc.github.io' \
  \) -prune -o -print
}

d=""
# {{{
declare -a common_fzf_options=(
  --no-unicode
  --no-info
  --no-multi
  --no-sort
  --reverse
  --delimiter="$d"
  --prompt="  "
  --pointer="â—‡"
  --color=spinner:0
  --preview-window noborder
  --preview-window down:80%
  --preview='lantern-preview {2}{3}'
  --height=60%
  --margin=0,2
  #--tiebreak=index
  --with-nth=2..3 # visible fields
  --nth=2         # search fields relative to the above
  --expect="enter,tab"
  --bind=change:top
)
# }}}

export LC_ALL=C

# load
[ -f "$data_path" ] && source "$data_path" || declare -A data
declare -A _data

::lantern::manage() {
# add new
while IFS= read -r path; do

  # format path
  path=${path/$HOME/\~}

  length="${path//[!\/]}"
  length="${#length}"

  if (( $length > 1 )); then
    left="${path%/*}"
    right="/${left##*/}/${path##*/}"
    left="${left%/*}"
  else
    left="${path%/*}"
    right="/${path##*/}"
  fi

  path=$left$d$right

  [[ "$path" == "" ]] && continue

  _data["$path"]=0
  if [ ! ${data["$path"]+woo} ]; then
    data["$path"]=0
  fi
done <<< "$(::lantern::find)"

# remove old & print
for path in "${!data[@]}"; do
  if [ ! ${_data["$path"]+woo} ]; then
    unset 'data["$path"]'
  else
    echo "${data["$path"]} $d$path";
  fi
done | sort -k1,1nr -s
}

# deal with ouput
out="$(::lantern::manage | fzf "${common_fzf_options[@]}")"

k="$(awk -F" $d" 'NR==1' <<< "$out")"
s="$(awk -F" $d" 'NR==2 { print $1 }' <<< "$out")"
e="$(awk -F" $d" 'NR==2 { print $2 }' <<< "$out")"

# reveal
if [[ "$k" == "tab" ]]; then
  e="${e%/*}"
fi

[[ "$e" != "" ]] && data["$e"]=$((s+1))

# save
declare -p data > "$data_path"

# clean up
e="${e/\~/$HOME}"
e="${e/$d/}"

echo "$e"
